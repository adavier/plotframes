{
  "name": "plotframes",
  "version": "1.0.0",
  "description": "A Node.js frame plotter inspired by FFmpeg plotframes",
  "main": "cli.js",
  "preferGlobal": true,
  "bin": {
    "plotframes": "./cli.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rodrigopolo/plotframes.git"
  },
  "keywords": [
    "plot",
    "frames",
    "ffprobe",
    "ffmpeg",
    "gnuplot",
    "bitrate"
  ],
  "author": "Rodrigo Polo <rodrigo.polo@gmail.com> (http://rodrigopolo.com)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rodrigopolo/plotframes/issues"
  },
  "homepage": "https://github.com/rodrigopolo/plotframes#readme",
  "dependencies": {
    "dashdash": "1.10.x",
    "split": "1.0.x",
    "temp": "0.8.x"
  },
  "readme": "plotframes\n===========\nA Node.js CLI frame plotter inspired on [FFmpeg plotframes](https://github.com/FFmpeg/FFmpeg/blob/master/tools/plotframes) but 350x faster!\n\n![plot](http://i.imgur.com/i0iIg8D.png \"plot\")\n\n\nRequirements:\n* [gnuplot](http://www.gnuplot.info/)  \n* [FFmpeg >= 1.2 with the ffprobe command](https://www.ffmpeg.org/)\n\n\nInstallation and running\n```\nnpm install plotframes -g\nplotframes input.mkv\n```\n\nUsage\n```\nUsage: plotframes [OPTIONS]\noptions:\n    -h, --help                      Print this help and exit.\n    -i FILE, --input=FILE           Specify multimedia file to read. This is the\n                                    file passed to the ffprobe command. If not\n                                    specified it is the first argument passed to\n                                    the script.\n    -s v, --stream=v                Specify stream. The value must be a string\n                                    containing a stream specifier. Default value\n                                    is \"v\".\n    -o FILE.png, --output=FILE.png  Set the name of the output used by gnuplot.\n                                    If not specified no output is created. Must\n                                    be used in conjunction with the terminal\n                                    option.\n    -t png, --terminal=png          Set the name of the terminal used by\n                                    gnuplot. By default it is \"x11\". Must be\n                                    used in conjunction with the output option.\n                                    Check the gnuplot manual for the valid\n                                    values.\n```\n\n>**WARNING:** This is **NOT** a node.js module for inclusion in other Node.js scripts, it is just a CLI for use in the terminal/console, maybe in the future I'll see to integrate it somehow.\n\n\n\n#####OS X requirements installation\n* Install Xcode\n* Install [Homebrew](http://brew.sh)\n\n```\nbrew install Caskroom/cask/xquartz\nbrew install gnuplot --with-x11\n```\n> More setup for other OSes coming soon\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) by Rodrigo Polo http://RodrigoPolo.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
}
